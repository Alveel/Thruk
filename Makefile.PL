use inc::Module::Install;

use FindBin;
if(-e "$FindBin::Bin/local-lib") {
    use lib "$FindBin::Bin/local-lib/lib/perl5";
    require local::lib; local::lib->import("$FindBin::Bin/local-lib/perl5/");
}

name 'Thruk';
all_from 'lib/Thruk.pm';

license 'gpl3';
resources(
    'homepage',   => 'http://www.thruk.org',
    'bugtracker'  => 'http://github.com/sni/Thruk/issues',
    'repository', => 'http://github.com/sni/Thruk',
);

requires 'YAML'                                   => 0.70;
requires 'YAML::Tiny'                             => 1.41;
requires 'JSON'                                   => 0.00;
requires 'JSON::XS'                               => 0.00;
requires 'Compress::Raw::Zlib'                    => 2.024;
requires 'Sub::Uplevel'                           => 0.22;
requires 'Variable::Magic'                        => 0.40;
requires 'Path::Class'                            => 0.18;
requires 'Config::General'                        => 2.44;
requires 'File::Copy::Recursive'                  => 0.38;
requires 'Scalar::Util'                           => 1.21;
requires 'List::Util::XS'                         => 0;
requires 'URI::Escape'                            => 0;
requires 'parent'                                 => 0.223;
requires 'Moose'                                  => 0.98;
requires 'MooseX::MethodAttributes::Inheritable'  => 0.20;
requires 'MooseX::Role::WithOverloading'          => 0.05;
requires 'Monitoring::Livestatus'                 => 0.54;
requires 'Monitoring::Availability'               => 0.12;
requires 'MIME::Types'                            => 0.00;
requires 'HTTP::Body'                             => 1.07;
requires 'LWP'                                    => 5.833;
requires 'GD'                                     => 2.44;
requires 'Config::Any'                            => 0.19;
requires 'Template'                               => 2.22;
requires 'Class::C3'                              => 0.22;
requires 'Algorithm::C3'                          => 0.08;
requires 'Time::HiRes'                            => 0;
requires 'Thread::Queue'                          => 2.11;
requires 'Date::Calc'                             => 6.3;
requires 'Data::Page'                             => 2.02;
requires 'HTML::Entities'                         => 3.64;
requires 'File::Slurp'                            => 0.00;
requires 'FindBin'                                => 0.00;
requires 'Date::Manip'                            => 0.00;
requires 'Excel::Template'                        => 0.32;
requires 'Class::Accessor::Fast'                  => 0.34;
requires 'Log::Dispatch::File'                    => 2.26;
requires 'Devel::StackTrace'                      => 0.0;
requires 'Catalyst::Runtime'                      => 5.80020;
requires 'Catalyst::Action::RenderView'           => 0.14;
requires 'Catalyst::Plugin::ConfigLoader'         => 0.27;
requires 'Catalyst::Plugin::Static::Simple'       => 0.29;
requires 'Catalyst::Plugin::StackTrace'           => 0.11;
requires 'Catalyst::View::TT'                     => 0.32;
requires 'Catalyst::View::GD'                     => 0.01;
requires 'Catalyst::View::JSON'                   => 0.00;
requires 'Catalyst::View::Excel::Template::Plus'  => 0.03;
requires 'Catalyst::Plugin::Authentication'       => 0.10016;
requires 'Catalyst::Plugin::Authorization::Roles' => 0.08;
requires 'Catalyst::Plugin::CustomErrorMessage'   => 0.04;
requires 'Catalyst::Plugin::Redirect'             => 0.02;
requires 'Catalyst::Plugin::Compress::Gzip'       => 0;
requires 'Catalyst::Plugin::Unicode::Encoding'    => 0.00;
requires 'Catalyst::Plugin::Cache'                => 0.00;
requires 'Catalyst::Log::Log4perl'                => 1.04;
requires 'Catalyst::Engine::FastCGI'              => 0;
requires 'Catalyst::Devel'                        => 1.26;
requires 'FCGI'                                   => 0.69;
requires 'FCGI::ProcManager'                      => 0.19;
requires 'FCGI::ProcManager::MaxRequests'         => 0;

# test requirements make it into the META.yml and will break
# normal package installation
# install them by hand if you plan author tests
#test_requires 'HTML::Lint';
#test_requires 'File::BOM';
#test_requires 'Test::Pod'                         => 1.40;
#test_requires 'Test::Perl::Critic';
#test_requires 'Test::Pod::Coverage';
#test_requires 'Perl::Critic::Policy::Dynamic::NoIndirect';
#test_requires 'Perl::Critic::Policy::NamingConventions::ProhibitMixedCaseSubs';
#test_requires 'Perl::Critic::Policy::ValuesAndExpressions::ProhibitAccessOfPrivateData';

##################################
# should come with Catalyst::Devel
eval {
    catalyst;
};

##################################
# create symlinks for tests
mkdir('t/xt') unless -d 't/xt';
unlink(glob('t/xt/*.t'));
for my $test (glob('plugins/plugins-available/*/t/*.t')) {
    my $testfile = $test;
    $testfile    =~ s/.*\///gmx;
    symlink('../../'.$test, 't/xt/'.$testfile) or die("cannot create symlink: $!");
}

tests_recursive;
install_script glob('script/*.pl');
auto_install;
WriteAll;

##################################
# patch our makefile
my $new_makefile = '';
open(my $fh, '<', 'Makefile') or die("cannot open Makefile");
my $found_make_create_distdir = 0;
while(<$fh>) {
    my $line = $_;
    if($line =~ m/^install\s*:/mx) {
        $line = <<EOT;
do_not_install :
	\$(NOECHO) \$(ECHO) make install is not supported.
	\$(NOECHO) \$(ECHO) please have a look at the documentation on howto install Thruk.
	exit 1

install :: do_not_install pure_install doc_install
EOT
    }
    # search the create_distdir part
    if($line =~ m/create_distdir\s*:/mx) {
        $found_make_create_distdir = 1;
    }
    if($found_make_create_distdir and $line =~ m/^\s*$/mx) {
        $found_make_create_distdir = 0;
        my $cp_option;
        $cp_option = "-d" if $^O eq 'linux';
        $cp_option = "-R" if $^O eq 'freebsd';
        $cp_option = "-R" if $^O eq 'darwin';
        $line = "\t".'for file in `cat MANIFEST`; do if [ -d $$file -a -L $$file ]; then $(CP) '.$cp_option.' $$file $(DISTVNAME)/`dirname $$file`/; fi; done'."\n".$line if defined $cp_option;
    }
    $new_makefile .= $line;
}
close($fh);
open(my $fh, '>', 'Makefile') or die("cannot open Makefile for writing");
print $fh $new_makefile;
close($fh);
print "patched Makefile\n";
